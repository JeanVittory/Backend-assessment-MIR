generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String
  password  String
  favs      Fav[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fav {
  id        String    @id @default(uuid())
  name      String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  items     Artwork[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Artist {
  id          String    @id @default(uuid())
  firstname   String
  lastname    String
  avatar      String
  birthdate   DateTime
  death       String    @default("Unknown")
  pseudonym   String?
  nationality String
  gender      String
  bio         String
  price       Int
  artworks    Artwork[]
  movement    Movement  @relation(fields: [movementId], references: [id])
  movementId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Artwork {
  id                String          @id @default(uuid())
  name              String
  year              String
  description       String
  technique         String
  localization      Origins_artwork @relation(fields: [origins_artworkId], references: [id])
  price             Int
  artist            Artist          @relation(fields: [artistId], references: [id])
  artistId          String
  movement          Movement        @relation(fields: [movementId], references: [id])
  movementId        String
  fav               Fav?            @relation(fields: [favId], references: [id])
  favId             String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  origins_artworkId String
}

model Movement {
  id                String          @id @default(uuid())
  name              String
  description       String
  origin            Origin_movement @relation(fields: [origin_movementId], references: [id])
  activity          Int[]
  artists           Artist[]
  artworks          Artwork[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  origin_movementId String
}

model Origin_movement {
  id           String     @id @default(uuid())
  localization Decimal[]
  country      String
  movements    Movement[]
}

model Origins_artwork {
  id           String    @id @default(uuid())
  localization Decimal[]
  country      String
  artwork      Artwork[]
}
